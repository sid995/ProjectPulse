services:
  web:
    build:
      context: ./web
    ports:
      - "3000:3000"
    networks:
      - projectpulse-network
    restart: unless-stopped
    depends_on:
      - api
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:3000" ]
      interval: 10s
      timeout: 5s
      retries: 5

  api:
    build:
      context: ./api
    ports:
      - "8080:8080"
    networks:
      - projectpulse-network
    restart: unless-stopped
    depends_on:
      - postgres
      - redis

  postgres:
    image: postgres:16-alpine
    environment:
      POSTGRES_USER: projectpulse
      POSTGRES_PASSWORD: projectpulse
      POSTGRES_DB: projectpulse
      TZ: UTC
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - projectpulse-network
    restart: unless-stopped
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U projectpulse" ]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - projectpulse-network
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  projectpulse-network:
    driver: bridge

volumes:
  postgres-data:
  redis-data:
